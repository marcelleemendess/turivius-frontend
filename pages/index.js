import Head from 'next/head'
import Card from '../components/card/Card'
import { Container, Header, Content, Grid, Row, Col } from 'rsuite';
import TuriviusHeader from '../components/layout/Header';
import { useState } from 'react';

export default function Home(props) {
  const [voteData, setVoteData] = useState({})

  //função para mesclar data de entities no card correspondente
  const mergeById = (arr1, arr2) =>
    arr1.map(card => ({
    ...arr2.find((entity) => (card.entity === entity.id)),
    ...card
  }));
  
  const mergedData = mergeById(props.cards, props.entities)

  //função para os botoes like/dislike no Component Card.jsx, arrId = index de cada card
  const toggleLike = (arrId, vote) => {
    // set new object with array index and vote
    const newVote = { [arrId]: { vote } }
    setVoteData({...voteData, ...newVote})
  }
 
  return (
    <div>
      <Head>
        <title>Turivius Frontend Test</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
      </Head>
      
      <Header>
        <TuriviusHeader />
      </Header>

      <Container>
        <Content>
          <Grid fluid>
            <Row>
              {mergedData.map((mergedCard, index) =>
              // do not user card.id as key -> multiple cards with same id value error
                <Col key={index} sm={24}>
                  <Card {...mergedCard} arrId={index} toggleLike={toggleLike} voteData={voteData}/>
                </Col>)}
            </Row>
          </Grid>
        </Content>
      </Container>
    </div>
  )
}

Home.getInitialProps = async () => {
  const cards = await (await fetch('http://localhost:3000/api/cards')).json()
  // Como em const cards, fetching data de entities api
  const entities = await (await fetch('http://localhost:3000/api/entities')).json()
  return {
    cards:cards, entities:entities
  }
}

